import java.io.BufferedReader;
import java.io.FileWriter;
import java.io.InputStreamReader;
import java.io.PrintWriter;

import org.apache.http.HttpResponse;
import org.apache.http.client.methods.HttpGet;
import org.apache.http.impl.client.DefaultHttpClient;

/* 
Automated Wyoming Radiosondes Parser - Crae Sosa 
Selected Stations 
1. HGHT = 61m - 72694 SLE Salem Observations
2. HGHT = 790m - 72451 DDC Dodge City(Awos) Observations at 00Z 15 Mar 2014
3. HGHT = 1625m - 72469 DNR Denver Observations at 00Z 15 Mar 2014
 */
public class WyomingDownload {
	static PrintWriter printWriter;
	static String downloadDirectory = "/Users/craesosa/Dropbox/Northrop/WyomingRadiosondes/Java/WyomingSam/wyoming_downloads/";
	static String wyomingLinkHead = "http://weather.uwyo.edu/cgi-bin/sounding?";
	static String wyomingLinkRegion = "region=naconf";
	static String wyomingLinkTextType = "&TYPE=TEXT%3ALIST";
	// varied
	static String wyomingLinkYear = "&YEAR=";
	static String wyomingLinkMonth = "&MONTH=";
	static String wyomingLinkTimespan = "&FROM=all";
	static String wyomingLinkStationName = "&STNM=";

	public static void main(String args[]) {
		String[] wyomingStationNumberArray = { "72694", "72451", "72469"};
		String[] wyomingStationNumberAbbrevNameArray = { "72694SLESalem","72451DDCDodgeCity","72469DNRDenver"};
		String[] years = {"2009"};
		String[] months = { "01" };
		// Loop over the stations once you have em
		for (int k = 0; k < wyomingStationNumberArray.length; k++) {
			for (int i = 0; i < years.length; i++) {
				for (int j = 0; j < months.length; j++) {
					// Assembling link
					String linkGen = wyomingLinkHead + wyomingLinkRegion + wyomingLinkTextType + wyomingLinkYear + years[i] + wyomingLinkMonth + months[j] + wyomingLinkTimespan + wyomingLinkStationName + wyomingStationNumberArray[k];
					System.out.println(linkGen);
					wyomingSite(linkGen, years[i], months[j], wyomingStationNumberArray[k], wyomingStationNumberAbbrevNameArray[k]);
				}
			}
		}
	}

	public static void wyomingSite(String link, String years, String months,
			String stationNum, String stations) {
		try {
			DefaultHttpClient client = new DefaultHttpClient();
			HttpGet get = new HttpGet(link);
			HttpResponse response = client.execute(get);
			BufferedReader in = new BufferedReader(new InputStreamReader(
					response.getEntity().getContent()));
			String line = "";
			while ((line = in.readLine()) != null) {
				if (line.replaceAll("\\s+", "").contains(stations)) {
					String stationNumName = line.substring(4,13).replaceAll("\\s+", "");	
					String dateInfo = line.substring(line.length()-20,line.length()-5).replaceAll("\\s+","").toUpperCase();
					String hourNumber = dateInfo.substring(0,3);
					String dayNumber = dateInfo.substring(3,5);
					String monNumber = monthToNumberConverter(dateInfo.substring(5,8));
					printWriter = new PrintWriter(new FileWriter(downloadDirectory + stationNumName + "." + years + "." + monNumber + "." + dayNumber +"." + hourNumber + ".csv"));

				} else if (line.contains("Station information and sounding indices")) {
					printWriter.close();
				}

				if (containsLetter(line) | line.contains("--") | line.isEmpty()) {

				} else {
					//44 is the length of the substring 
					String lineOriginal = line.substring(0,44);
					line = lineOriginal.substring(0,7) + "," + 
							lineOriginal.substring(7,14) + "," + 
							lineOriginal.substring(14,21) + "," + 
							lineOriginal.substring(21,28) + "," +
							lineOriginal.substring(28,35) + "," + 
							lineOriginal.substring(35,lineOriginal.length());

					boolean shouldAllowLine = true; 
					String[] checkLine = line.split(",");
					for(String bitToCheck:checkLine){
						if(bitToCheck.trim().length()==0){
							shouldAllowLine = false;
							break;
						}
					}

					if(shouldAllowLine){
						printWriter.println(line);
					}
				}
			}
			in.close();

		} catch (Exception e) {
			e.printStackTrace();
		}
	}

	public static String monthToNumberConverter(String month){
		if(month.equals("JAN")){
			return "01";
		}else if (month.equals("FEB")){
			return "02";
		}else if (month.equals("MAR")){
			return "03";
		}else if (month.equals("APR")){
			return "04";
		}else if (month.equals("MAY")){
			return "05";
		}else if (month.equals("JUN")){
			return "06";
		}else if (month.equals("JUL")){
			return "07";
		}else if (month.equals("AUG")){
			return "08";
		}else if (month.equals("SEP")){
			return "09";
		}else if (month.equals("OCT")){
			return "10";
		}else if (month.equals("NOV")){
			return "11";
		}else if (month.equals("DEC")){
			return "12";
		}else{
			return "";
		}
	}

	public static boolean containsLetter(String s) {
		if (s == null)
			return false;
		boolean letterFound = false;
		for (int i = 0; !letterFound && i < s.length(); i++)
			letterFound = letterFound || Character.isLetter(s.charAt(i));
		return letterFound;
	}

}
